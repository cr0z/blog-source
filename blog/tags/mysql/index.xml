<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on Singsen</title>
    <link>https://blog.singsen.me/tags/mysql/</link>
    <description>Recent content in Mysql on Singsen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 07 Sep 2017 15:55:24 +0800</lastBuildDate>
    
	<atom:link href="https://blog.singsen.me/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>golang在MySQL中使用JSON对象</title>
      <link>https://blog.singsen.me/2017/09/golang%E5%9C%A8mysql%E4%B8%AD%E4%BD%BF%E7%94%A8json%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Thu, 07 Sep 2017 15:55:24 +0800</pubDate>
      
      <guid>https://blog.singsen.me/2017/09/golang%E5%9C%A8mysql%E4%B8%AD%E4%BD%BF%E7%94%A8json%E5%AF%B9%E8%B1%A1/</guid>
      <description>向数据库中插入JSON对象，需要结构体实现Valuer(database/sql/driver包)接口。
从数据库中读取JSON对象，需要结构体实现Scanner(database/sql包)接口。
比如发布一条微博或者动态附带一些图片之类的媒体文件,可以直接用JSON对象存入数据库：
package main import ( _ &amp;quot;github.com/go-sql-driver/mysql&amp;quot; &amp;quot;database/sql&amp;quot; &amp;quot;database/sql/driver&amp;quot; &amp;quot;encoding/json&amp;quot; &amp;quot;log&amp;quot; &amp;quot;time&amp;quot; ) type Media struct { Path string Type int } type MediaList []*Media var _ sql.Scanner = &amp;amp;MediaList{} var _ driver.Valuer = MediaList{} //继承Scanner（Scan接受的是指针类型） func (m *MediaList) Scan(src interface{}) error { if src == nil { return nil } b, _ := src.([]byte) return json.Unmarshal(b, m) } //继承Valuer（INSERT时，Valuer不接受指针类型） func (m MediaList) Value() (driver.Value, error) { return json.</description>
    </item>
    
    <item>
      <title>mysql权限配置</title>
      <link>https://blog.singsen.me/2017/09/mysql%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Thu, 07 Sep 2017 15:55:24 +0800</pubDate>
      
      <guid>https://blog.singsen.me/2017/09/mysql%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE/</guid>
      <description>查看用户root的权限:
SHOW GRANTS FOR root;
刷新用户权限:
FLUSH PRIVILEGES;
创建用户:
CREATE USER &#39;croz&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;[YOURPASSWORD]&#39;;
赋予&amp;rsquo;croz&amp;rsquo;@&amp;lsquo;%&amp;lsquo;用户数据库&amp;rsquo;shzl&amp;rsquo;的所有权限:
GRANT ALL PRIVILEGES ON shzl.* TO &#39;croz&#39;@&#39;%&#39;;
赋予&amp;rsquo;croz&amp;rsquo;@&amp;lsquo;%&amp;lsquo;用户数据库&amp;rsquo;shzl&amp;rsquo;的SELECT权限:
GRANT SELECT ON shzl.* TO &#39;croz&#39;@&#39;%&#39;;
(其他权限替换SLELECT为UPDATE、DELETE等)
移除&amp;rsquo;croz&amp;rsquo;@&amp;lsquo;%&amp;lsquo;用户对数据库&amp;rsquo;shzl&amp;rsquo;的所有权限:
REVOKE ALL PRIVILEGES ON shzl.* FROM &#39;croz&#39;@&#39;%&#39;;
移除&amp;rsquo;croz&amp;rsquo;@&amp;lsquo;%&amp;lsquo;用户对数据库&amp;rsquo;shzl&amp;rsquo;的SELECT权限:
REVOKE SELECT ON shzl.* FROM &#39;croz&#39;@&#39;%&#39;;
修改权限后刷新权限:
FLUSH PRIVILEGES
host修改为 %后还是不能远程访问，错误码 111:
错误原因:mysql启动时只绑定了本地地址,修改/etc/mysql/my.cnf,注释掉以下内容:
bind-address = 127.0.0.1
(也可能my.cnf里只有两个include，就到include的目录下找相关配置，如 /etc/mysql/mysql.conf.d/mysqld.cnf)
最后重启mysql
sudo /etc/init.d/mysql restart</description>
    </item>
    
  </channel>
</rss>